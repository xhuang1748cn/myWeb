<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:websocket="http://www.springframework.org/schema/websocket"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!--<bean id="autoTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
		<!--<property name="jobClass" value="cn.srn.autotask.ScheduledJob" />-->
		<!--<property name="jobDataAsMap">-->
			<!--<map>-->
				<!--<entry key="userService" value-ref="userService"></entry>-->
			<!--</map>-->
		<!--</property>-->
		<!--<property name="durability" value="true" />-->
	<!--</bean>-->
	<!--<bean id="autoTask2" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
		<!--<property name="jobClass" value="cn.srn.autotask.ScheduledJob2" />-->
		<!--<property name="durability" value="true" />-->
	<!--</bean>-->

	<!--<bean id="cronTrigger"-->
		  <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
		<!--<property name="jobDetail" ref="autoTask" />-->
		<!--<property name="cronExpression" value="0/5 * * ? * 2" />-->
	<!--</bean>-->
	<!--<bean id="cronTrigger2"-->
		  <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
		<!--<property name="jobDetail" ref="autoTask2" />-->
		<!--<property name="cronExpression" value="0/10 * * ? * 2" />-->
	<!--</bean>-->

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!--<property name="triggers">-->
			<!--<list>-->
				<!--<ref bean="cronTrigger" />-->
				<!--<ref bean="cronTrigger2" />-->
			<!--</list>-->
		<!--</property>-->
	</bean>

	<!-- MVC URL中传递MAP-->
	<mvc:annotation-driven enable-matrix-variables="true">
		<mvc:message-converters register-defaults="true">
			<!-- 配置直接返回String数据 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- 配置Fastjson支持 -->
            <bean id="fastjsonMessageCoverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
	</mvc:annotation-driven>

	<!--<bean class ="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" >-->
		<!--<property name="messageConverters">-->
			<!--<list>-->
				<!--<ref bean="fastjsonMessageCoverter" />-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- 启动扫描包实例化 -->
	<context:component-scan base-package="cn.srn.controllers"/>
	<context:component-scan base-package="cn.srn.autotask"/>

	<!-- 定义JSP视图解析器-->  
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<!--指定JSP目录-->
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>
	<!-- use  Servlet  3.0  based  multipart  parsing -->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/admin/**"/>
			<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/user/**"/>
			<mvc:exclude-mapping path="/**/*.css"/>
			<mvc:exclude-mapping path="/**/*.jpg"/>
			<mvc:exclude-mapping path="/**/*.png"/>
			<mvc:exclude-mapping path="/**/*.js"/>
			<bean class="cn.srn.interceptors.LoginInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**"/>
			<bean class="cn.srn.interceptors.BgLoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 静态资源文件目录 -->
	<mvc:resources location="/imgs/" mapping="/imgs/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/assets/" mapping="/assets/**"/>

	<!-- websocket消息处理bean -->
	<bean id="HelloHandler" class="cn.srn.websocket.HelloHandler"/>
	<websocket:handlers>
		<!-- 配置消息处理bean和路径的映射关系 -->
		<websocket:mapping path="/hello" handler="HelloHandler"/>
		<!-- 配置握手拦截器 -->
		<websocket:handshake-interceptors>
			<bean class="cn.srn.websocket.HandShakeInterceptor"/>
		</websocket:handshake-interceptors>
		<!-- 开启sockjs，去掉则关闭sockjs -->
		<websocket:sockjs/>
	</websocket:handlers>
	<!-- 配置websocket消息的最大缓冲区长度 -->
	<bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
		<property name="maxTextMessageBufferSize" value="8192"/>
		<property name="maxBinaryMessageBufferSize" value="8192"/>
	</bean>
</beans>
